// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id
  email     String @unique
  firstName String
  lastName  String
  image     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Resume Resume[]

  @@index([email])
}

model Resume {
  id    String @id @default(uuid())
  title String

  first_name String?
  last_name  String?
  email      String?
  phone      String?
  address    String?
  jobtitle   String?
  summary    String?
  github     String?
  linkedin   String?

  userId String
  user   User?  @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Experience           Experience[]
  Education            Education[]
  Skills               Skills[]
  Projects             Projects[]
  AcademicAchievements AcademicAchievements[]
  ExtraCarricular      ExtraCarricular[]

  @@unique([userId, title])
}

model Experience {
  id Int @id @default(autoincrement())

  resumeId String
  resume   Resume? @relation(fields: [resumeId], references: [id])

  position_title String
  company_name   String
  city           String
  startDate      DateTime
  endDate        DateTime

  summary String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([resumeId])
}

model Education {
  id Int @id @default(autoincrement())

  resumeId String
  resume   Resume? @relation(fields: [resumeId], references: [id])

  institution_name String
  course           String
  location         String
  grade            String
  startdate        DateTime
  enddate          DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([resumeId])
}

enum SkillType {
  Framework
  Tools
  Language
}

model Skills {
  id Int @id @default(autoincrement())

  resumeId String
  resume   Resume? @relation(fields: [resumeId], references: [id])

  name String    
  type SkillType

  @@index([resumeId])
}

model Projects {
  id Int @id @default(autoincrement())

  resumeId String
  resume   Resume? @relation(fields: [resumeId], references: [id])

  name        String
  description String
  tags        String

  liveLink   String?
  githubLink String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([resumeId])
}

model AcademicAchievements {
  id Int @id @default(autoincrement())

  resumeId String
  resume   Resume? @relation(fields: [resumeId], references: [id])

  achivement String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([resumeId])
}

model ExtraCarricular {
  id Int @id @default(autoincrement())

  resumeId String
  resume   Resume? @relation(fields: [resumeId], references: [id])

  activity String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([resumeId])
}
